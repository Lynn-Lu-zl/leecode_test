package DataStructure.链表.单链表节点;

/**
 * 单链表节点类
 *
 * 链表是除数组外，另一个常用的数据结构，算法中经常会对链表进行处理，主要是指针的用法。
 *
 * 链表
 * 什么是链表
 * 链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针连接次序实现的。
 * 每一个链表都包含多个节点，节点又包含两个部分，一个是数据域（储存节点含有的信息），一个是引用域（储存下一个节点或者上一个节点的地址）。
 * 链表的特点
 * 获取数据麻烦，需要遍历查找，比数组慢
 * 方便插入、删除
 * 实现链表
 * 创建一个节点类，其中节点类包含两个部分，第一个是数据域（你到时候要往节点里面储存的信息），第二个是引用域（相当于指针，单向链表有一个指针，指向下一个节点；双向链表有两个指针，分别指向下一个和上一个节点）
 * 创建一个链表类，其中链表类包含三个属性：头结点、尾节点和大小，方法包含添加、删除、插入等等方法。
 * ————————————————
 * 版权声明：本文为CSDN博主「小朱小朱绝不服输」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
 * 原文链接：https://blog.csdn.net/weixin_44052055/article/details/114690505
 */
public class Node {
    //往节点里面储存的信息
    public Object data;
    //指针
    public Node next;

    public Node(Object e){
        this.data = e;
    }
}

